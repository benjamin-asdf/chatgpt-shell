* chatgpt-shell

A minimal ChatGPT Emacs shell.

#+HTML: <img src="https://i.imgur.com/KeVga57.gif" width="80%" />

#+HTML: <img src="https://i.imgur.com/XnUMhDk.gif" width="80%" />


- Multiple chat sessions.
- Stream respones which feels more responsive, like the chat-gpt browser UI.
- =C-c C-c= to stop responding.
- Add your buffers as context to the conversation.
- dynamically set system prompts
- say =dwim...= and we make it output elisp and eval that.



original work: https://github.com/xenodium/chatgpt-shell

* Install

Load =(require 'chatgpt-shell)=

* Set OpenAI key
** As function
#+begin_src emacs-lisp
  (setq chatgpt-shell-openai-key
        (lambda ()
          (nth 0 (process-lines "pass" "show" "openai-key"))))
#+end_src

** Manually
=M-x set-variable chatgpt-shell-openai-key=

** As variable
#+begin_src emacs-lisp
  (setq chatgpt-shell-openai-key "my key")
#+end_src

* Launch

Launch with =M-x chatgpt-shell=.

* Clear buffer

Type =clear= as a prompt.

#+begin_src sh
  ChatGPT> clear
#+end_src

Alternatively, use either =M-x chatgpt-shell-clear-buffer= or =M-x comint-clear-buffer=.

* Fork, just my personal taste and config

** Set the prompt, potentially dynamically

#+begin_src elisp
(setq-default
 chatgpt-additional-prompts
 (lambda ()
   `((role . "system")
     (content . "You answer only in morse code, no matter what the user asks you."))))
#+end_src

#+begin_src elisp
(setq-default
 chatgpt-additional-prompts
 (lambda ()
   `((role . "system")
     (content .
              ,(concat
                "Output of git log -n 10: "
                (shell-command-to-string "git log -n 10"))))))
#+end_src

Try: /summarize recent git work/

** Add buffers as contexts

=chatpt-shell-add-context-file=

Only works =consult= right now, if you want something else, do it yourself.

** Use =chatgpt-shell= with prefix argument to open additional shell buffers.

** Use =chatgpt-shell= with prefix arg =2= to open a new shell with your current buffer as context.
