* chatgpt-shell

A minimal ChatGPT Emacs shell.

Benjamins fork with stream response:
#+HTML: <img src="https://i.imgur.com/XnUMhDk.gif" width="80%" />


#+HTML: <img src="https://raw.githubusercontent.com/xenodium/chatgpt-shell/main/chatgpt-shell-demo.gif" width="80%" />

** Note

This is very much an experimental proof of concept, possibly incomplete, or maybe with some rough edges. Pull requests with improvements or fixes totally welcome.

* Install

Load =(require 'chatgpt-shell)=

* Set OpenAI key
** As function
#+begin_src emacs-lisp
  (setq chatgpt-shell-openai-key
        (lambda ()
          (nth 0 (process-lines "pass" "show" "openai-key"))))
#+end_src

** Manually
=M-x set-variable chatgpt-shell-openai-key=

** As variable
#+begin_src emacs-lisp
  (setq chatgpt-shell-openai-key "my key")
#+end_src

* Launch

Launch with =M-x chatgpt-shell=.

* Clear buffer

Type =clear= as a prompt.

#+begin_src sh
  ChatGPT> clear
#+end_src

Alternatively, use either =M-x chatgpt-shell-clear-buffer= or =M-x comint-clear-buffer=.

* Fork, just my personal taste and config

** Set the prompt, potentially dynamically

#+begin_src elisp
(setq-default
 chatgpt-additional-prompts
 (lambda ()
   `((role . "system")
     (content . "You answer only in morse code, no matter what the user asks you."))))
#+end_src


#+begin_src elisp
(setq-default
 chatgpt-additional-prompts
 (lambda ()
   `((role . "system")
     (content .
              ,(concat
                "Output of git log -n 10: "
                (shell-command-to-string "git log -n 10"))))))
#+end_src

Try: /summarize recent git work/

** Add buffers as contexts

=chatpt-shell-add-context-file=

Only works =consult= right now, if you want something else, do it yourself.

** Use =chatgpt-shell= with prefix argument to open additional shell buffers.
